local library =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Stats = game:GetService("Stats")
local window =
    library:AddWindow(
    "ðŸ‘‘ | Muki private script",
    {
        main_color = Color3.fromRGB(0, 0, 0),
        min_size = Vector2.new(750, 950),
        can_resize = true
    }
)
local KillingTab = window:AddTab("Killing")
local deathRingFolder = KillingTab:AddFolder("Death Ring")
_G.deathRingRange = 20

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local ringPart = nil
local playerRoots = {} -- Cache fÃ¼r HumanoidRootParts
local killedRecently = {} -- Spieler, die schon gekillt wurden

-- RootPart cachen
local function cachePlayer(p)
    if p.Character then
        local root = p.Character:FindFirstChild("HumanoidRootPart")
        if root then
            playerRoots[p] = root
        end
    end
    p.CharacterAdded:Connect(function(char)
        local root = char:WaitForChild("HumanoidRootPart")
        playerRoots[p] = root
        killedRecently[p] = nil -- Reset, wenn er respawnt
    end)
end

for _, p in ipairs(Players:GetPlayers()) do
    if p ~= player then cachePlayer(p) end
end
Players.PlayerAdded:Connect(cachePlayer)
Players.PlayerRemoving:Connect(function(p)
    playerRoots[p] = nil
    killedRecently[p] = nil
end)

-- Ring-GrÃ¶ÃŸe anpassen
local function updateRingSize()
    if ringPart then
        local diameter = _G.deathRingRange * 2
        ringPart.Size = Vector3.new(0.2, diameter, diameter)
    end
end

deathRingFolder:AddTextBox("Ring Range (1-140)", function(text)
    local range = tonumber(text)
    if range then
        _G.deathRingRange = math.clamp(range, 1, 140)
        updateRingSize()
    end
end)

-- Visualisierung
deathRingFolder:AddSwitch("Show Ring Visual", function(bool)
    if bool then
        ringPart = Instance.new("Part")
        ringPart.Shape = Enum.PartType.Cylinder
        ringPart.Material = Enum.Material.Neon
        ringPart.Color = Color3.fromRGB(50, 163, 255)
        ringPart.Transparency = 0.6
        ringPart.Anchored = true
        ringPart.CanCollide = false
        ringPart.CastShadow = false
        updateRingSize()
        ringPart.Parent = workspace
    elseif ringPart then
        ringPart:Destroy()
        ringPart = nil
    end
end)

-- Death Ring
deathRingFolder:AddSwitch("Death Ring Active", function(bool)
    _G.deathRingEnabled = bool

    if bool then
        if not _G.deathRingConnection then
            _G.deathRingConnection = RunService.Heartbeat:Connect(function()
                local character = checkCharacter()
                local root = character and character:FindFirstChild("HumanoidRootPart")
                if not root then return end

                -- Ring folgen
                if ringPart then
                    ringPart.CFrame = root.CFrame * CFrame.Angles(0, 0, math.rad(90))
                end

                -- Position
                local myPos = root.Position

                -- Gegner durchgehen
                for p, targetRoot in pairs(playerRoots) do
                    if p ~= player and targetRoot and isPlayerAlive(p) and not isWhitelisted(p) then
                        local dist = (myPos - targetRoot.Position).Magnitude
                        if dist <= (_G.deathRingRange or 20) then
                            if not killedRecently[p] then
                                killedRecently[p] = true
                                killPlayer(p) -- ðŸš€ Sofort kill
                            end
                        else
                            killedRecently[p] = nil -- Reset, wenn er wieder raus ist
                        end
                    end
                end
            end)
        end
    else
        if _G.deathRingConnection then
            _G.deathRingConnection:Disconnect()
            _G.deathRingConnection = nil
        end
    end
end)
